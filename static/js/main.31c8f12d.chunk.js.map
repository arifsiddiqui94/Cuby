{"version":3,"sources":["assets/icon1.jpg","assets/logo.png","assets/cuby.webm","components/header/index.js","components/assemble_video/index.js","components/home/index.js","containers/Homepage/homepage.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","header","id","className","src","logo","alt","width","type","data-toggle","data-target","aria-controls","aria-expanded","aria-label","href","assembleVideo","loop","muted","autoPlay","controls","preload","video","home","class","homepage","App","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"0FAAAA,EAAOC,QAAU,IAA0B,mC,gBCA3CD,EAAOC,QAAU,IAA0B,kC,kBCA3CD,EAAOC,QAAU,IAA0B,mC,6PC6C5BC,MAzCf,WACI,OACI,6BACI,yBAAKC,GAAG,SAASC,UAAU,kDACvB,yBAAKA,UAAU,6BACX,yBAAKC,IAAKC,IAAMC,IAAI,OAAOC,MAAM,OACjC,4BAAQJ,UAAU,iBAAiBK,KAAK,SAASC,cAAY,WAAWC,cAAY,aAAaC,gBAAc,YAAYC,gBAAc,QAAQC,aAAW,qBACxJ,0BAAMV,UAAU,0BAGxB,yBAAKA,UAAU,+CAA+CD,GAAG,aAC7D,wBAAIC,UAAU,aAAaD,GAAG,eAC1B,wBAAIC,UAAU,YACV,uBAAGA,UAAU,WAAWW,KAAK,KAA7B,SAGJ,wBAAIX,UAAU,YACV,uBAAGA,UAAU,WAAWW,KAAK,SAAS,0CAG1C,wBAAIX,UAAU,YACV,uBAAGA,UAAU,WAAWW,KAAK,YAAW,6CAE5C,wBAAIX,UAAU,YACV,uBAAGA,UAAU,WAAWW,KAAK,KAAI,4CAGrC,wBAAIX,UAAU,YACV,uBAAGA,UAAU,WAAWW,KAAK,SAAQ,wCAGzC,wBAAIX,UAAU,YACV,uBAAGA,UAAU,WAAWW,KAAK,YAAW,gD,sBCrBrDC,MAXf,WACI,OACI,yBAAKZ,UAAU,kCACX,2BAAOa,KAAK,OAAOC,MAAM,GAAGC,SAAS,OAAOC,SAAS,OAAOC,QAAQ,OAAOb,MAAM,QAC7E,4BAAQH,IAAKiB,IAAOb,KAAK,kB,MCsB1Bc,MAzBf,WACI,OACI,yBAAKnB,UAAU,wBACX,yBAAKA,UAAU,OACX,yBAAKA,UAAU,oCACX,yBAAKC,IAAKC,IAAMC,IAAI,OAAOC,MAAM,QACjC,uBAAGJ,UAAU,eAAb,wBACA,uBAAGA,UAAU,2BAAb,2BACA,iDAGJ,yBAAKA,UAAU,+BACX,kBAAC,EAAD,QAGR,yBAAKA,UAAU,mBACX,8BAAM,uBAAGoB,MAAM,0BACf,8BAAM,uBAAGA,MAAM,2BACf,8BAAM,uBAAGA,MAAM,yBACf,8BAAM,uBAAGA,MAAM,sB,WCPhBC,MAXf,WACI,OACI,6BACI,kBAAC,EAAD,MACA,kBAAC,EAAD,MAEA,yBAAKrB,UAAU,iCAAf,wBCAGsB,MARf,WACE,OACE,yBAAKtB,UAAU,OACb,kBAAC,EAAD,QCKcuB,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCZNC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,SDyHpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBC,MAAK,SAAAC,GACJA,EAAaC,gBAEdC,OAAM,SAAAC,GACLC,QAAQD,MAAMA,EAAME,c","file":"static/js/main.31c8f12d.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/icon1.a57ca0ec.jpg\";","module.exports = __webpack_public_path__ + \"static/media/logo.d47bffce.png\";","module.exports = __webpack_public_path__ + \"static/media/cuby.42df509c.webm\";","import React from 'react';\r\nimport logo from '../../assets/logo.png';\r\nimport './style.css';\r\n\r\nfunction header() {\r\n    return (\r\n        <div>\r\n            <nav id=\"navbar\" className=\"navbar fixed-top navbar-expand-md navbar-light\">\r\n                <div className=\"logo-container text-white\">\r\n                    <img src={logo} alt=\"logo\" width=\"90\" />\r\n                    <button className=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" data-target=\"#navbarNav\" aria-controls=\"navbarNav\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n                        <span className=\"navbar-toggler-icon\"></span>\r\n                    </button>\r\n                </div>\r\n                <div className=\"collapse navbar-collapse justify-content-end\" id=\"navbarNav\">\r\n                    <ul className=\"navbar-nav\" id=\"#navbar-nav\">\r\n                        <li className=\"nav-item\">\r\n                            <a className=\"nav-link\" href=\"#\" >HOME</a>\r\n                        </li>\r\n\r\n                        <li className=\"nav-item\">\r\n                            <a className=\"nav-link\" href=\"#team\" ><span>VISION</span></a>\r\n                        </li>\r\n\r\n                        <li className=\"nav-item\">\r\n                            <a className=\"nav-link\" href=\"#contact\"><span>RESOURCES</span></a>\r\n                        </li>\r\n                        <li className=\"nav-item\">\r\n                            <a className=\"nav-link\" href=\"#\"><span>OUTREACH</span></a>\r\n                        </li>\r\n\r\n                        <li className=\"nav-item\">\r\n                            <a className=\"nav-link\" href=\"#team\"><span>TEAM</span></a>\r\n                        </li>\r\n\r\n                        <li className=\"nav-item\">\r\n                            <a className=\"nav-link\" href=\"#contact\"><span>CONTACT</span></a>\r\n                        </li>\r\n                    </ul>\r\n                </div>\r\n            </nav>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default header;","import React from 'react';\r\nimport video from '../../assets/cuby.webm';\r\nimport './style.css';\r\n\r\nfunction assembleVideo() {\r\n    return (\r\n        <div className=\"container video-container mt-5\">\r\n            <video loop=\"true\" muted=\"\" autoPlay=\"true\" controls=\"true\" preload=\"auto\" width=\"100%\">\r\n                <source src={video} type=\"video/webm\">\r\n                </source>\r\n            </video>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default assembleVideo;","import React from 'react';\r\nimport AssembleVideo from '../assemble_video/index';\r\nimport logo from '../../assets/logo.png'\r\nimport './style.css';\r\n\r\nfunction home() {\r\n    return (\r\n        <div className=\"container-fluid home\">\r\n            <div className=\"row\">\r\n                <div className=\"col-lg-6 col-md-6 col-sm-12 cuby\">\r\n                    <img src={logo} alt=\"logo\" width=\"50%\" />\r\n                    <p className=\"friend-text\">Your friend in space</p>\r\n                    <p className=\"assemble-text mb-1 mt-5\">Assemble. Code. Launch.</p>\r\n                    <button>Request Demo</button>\r\n                </div>\r\n\r\n                <div className=\"col-lg-6 col-md-6 col-sm-12\">\r\n                    <AssembleVideo />\r\n                </div>\r\n            </div>\r\n            <div className=\"row home-footer\">\r\n                <span><i class=\"fab fa-facebook mr-3\"></i></span>\r\n                <span><i class=\"fab fa-instagram mr-3\"></i></span>\r\n                <span><i class=\"fab fa-youtube mr-3\"></i></span>\r\n                <span><i class=\"fab fa-google\"></i></span>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default home;","import React from 'react';\r\nimport Header from '../../components/header/index';\r\nimport Home from '../../components/home/index';\r\nimport Features from '../../components/features';\r\n\r\n\r\nfunction homepage() {\r\n    return (\r\n        <div>\r\n            <Header />\r\n            <Home />\r\n            {/* <Features /> */}\r\n            <div className=\"d-flex justify-content-center\"> More content here\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\nexport default homepage;","import React from 'react';\nimport './App.css';\nimport Homepage from './containers/Homepage/homepage'\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Homepage />\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}